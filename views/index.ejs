<!DOCTYPE html>
<html>
    <head>
        <title>Gender source detector and fixer</title>
        <link rel="stylesheet" type="text/css" href="/css/style.css">
    </head>
<body>
    <h1>Gender source detector and fixer</h1>
    <div id="container">
        <div id="content">
            <form id="text_form">
                <div class="form-field">
                    <label for="article_text">Enter some article text to see which additional sources are quoted. These do not include the main newsmakers or subjects of the story. Please keep your input to a maximum of 1000 words:</label>

                    <textarea id="article_text" name="article_text" oninput="countWords(this, document.getElementById('wordCount'))"></textarea>
                </div>
                <p>Word count: <span id="wordCount" style="color: black;">0</span>/1000</p>
                
                <div class="form-field" id="loading-spinner" style="display: none;">
                    <img src="/images/loading.gif" alt="Loading...">
                </div>

                <div class="form-field">
                    <button id="analyse-button" type="button" onclick="analyseArticle()">Analyse</button>
                </div>
            
            </form>
            <div id="results">
                <h2>Results</h2>
                <div id="recommendations">
                    <div id="results_statement" style="display: none;"></div>
                    <div id="job_links" style="display: none;"></div>
                </div>
                <div id="results_data">

                </div>
            </div>
            
        </div>
    </div>  

    <script>
    
        // Function for word counter
        function countWords(textarea, display) {
            let text = textarea.value;
            let words = text.split(/\s+/).filter(function(word) { return word.length > 0; }); // split by spaces and remove empty words
            display.textContent = words.length;
            if (words.length > 1000) {
                words = words.slice(0, 1000); // limit words array to 1000 elements
                textarea.value = words.join(' '); // update textarea value with limited words
                display.textContent = words.length;
                display.style.color = 'red';
            } else {
                display.style.color = 'black';
            }
        }

        // Function to make sure percentages don't have trailing decimals
        function formatPercentage(num) {
            return num % 1 === 0 ? Math.floor(num) : num.toFixed(2);
        }

        // Function to analyse the article
        function analyseArticle() {

            // Get elements that you need to toggle display properties of
            const loadingSpinner = document.getElementById('loading-spinner');
            const analyseButton = document.getElementById('analyse-button');
            const resultsStatementDiv = document.getElementById('results_statement');

            // Set the initial state of the button
            analyseButton.disabled = true;

            // Hide the button and display the loading spinner
            analyseButton.style.display = 'none';
            loadingSpinner.style.display = 'block';

            // Add an event listener to the textarea to enable/disable the button
            document.getElementById('article_text').addEventListener('input', function() {
                analyseButton.disabled = this.value.trim().length === 0;
            });

            const article_text = document.getElementById('article_text').value;

            if (!article_text.trim()) {
                alert('Please enter some article text to analyse.');
                return;
            }

            fetch('/detect', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ article_text: article_text })
            })
            .then(response => {
                    if (!response.ok) { throw response }
                    return response.json()  //we only get here if there is no error
                })
            .then(data => {
                let resultsHTML = '';

                // Count the gender distribution
                let maleCount = 0;
                let femaleCount = 0;
                let unknownCount = 0;
                for (let person of data) {
                    if (person.gender.toLowerCase() === 'male') {
                                maleCount++;
                        } else if (person.gender.toLowerCase() === 'female') {
                            femaleCount++;
                        } else {
                            unknownCount++;
                        }
                }
                const totalCount = maleCount + femaleCount + unknownCount;

                // Calculate the percentages
                const malePercentage = formatPercentage((maleCount / totalCount) * 100);
                const femalePercentage = formatPercentage((femaleCount / totalCount) * 100);
                const unknownPercentage = formatPercentage((unknownCount / totalCount) * 100);


                // Generate and show results statement
                resultsStatementDiv.style.display = 'block';

                if (data.length === 0) {
                        resultsStatementDiv.innerHTML = "There were no sources detected in the text, or the only sources quoted are the main newsmaker(s) or subject(s) of the story. If you think this is wrong, please close this dialogue box and try again.";
                        resultsStatementDiv.style.backgroundColor = "#F4D4D5";
                } else {

                    let minorityGender, majorityGender;

                    if (malePercentage > femalePercentage) {
                        minorityGender = 'female';
                        majorityGender = 'male';
                        resultsStatementDiv.textContent = "There are more men than women quoted in your story.";
                    } else if (malePercentage === femalePercentage) {
                        resultsStatementDiv.textContent = "There is a perfect balance of men and women quoted in your story. Great job!";
                        resultsStatementDiv.style.backgroundColor = "#A4D1A2";
                    } else {
                        minorityGender = 'male';
                        majorityGender = 'female';
                        resultsStatementDiv.textContent = "There are more women than men quoted in your story.";
                    }

                    if (majorityGender != null) {
                        const jobLinksDiv = document.getElementById('job_links');
                        
                        const majorityJobs = [];

                        for (let person of data) {
                            if (person.gender.toLowerCase() === majorityGender && person.linkedin === 'yes') {
                                majorityJobs.push(person.role);
                            }
                        }

                        jobLinksDiv.style.display = 'block';

                        if (majorityJobs.length != 0) {
                            jobLinksDiv.innerHTML = `<p>You might want to consider including more ${minorityGender} voices, or looking for alternative ${minorityGender} sources for some of the following roles (click on each item to see suggested UK-based leads):</p>`;

                            const ul = document.createElement('ul');

                            for (let job of majorityJobs) {
                            const jobLink = document.createElement('a');
                            jobLink.href = '#';
                            jobLink.textContent = job;
                            jobLink.addEventListener('click', (event) => {
                                event.preventDefault();
                                fetch('/scrape', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({ job_title: encodeURIComponent(job), minority_gender: minorityGender })
                                }).then((response) => {
                                    if (response.ok) {
                                        return response.text();
                                    }
                                }).then((html) => {
                                    document.open();
                                    document.write(html);
                                    document.close();
                                });
                            });

                            const li = document.createElement('li');
                            li.appendChild(jobLink);
                            ul.appendChild(li);
                            }

                            jobLinksDiv.appendChild(ul);
                            } else {
                                jobLinksDiv.innerHTML = `<p>You might want to consider including more ${minorityGender} voices.</p>`
                            }
                        }

                    // Presentation of results for sources

                    resultsHTML += '<h3>Sources quoted</h3>';
                    resultsHTML += '<table class = "source-table"><tr><th>Source</th><th>Gender</th><th>Role</th><th>Quotes</th></tr>';

                    for (let person of data) {
                        resultsHTML += `<tr>
                            <td>${person.name}</td>
                            <td>${person.gender}</td>
                            <td>${person.role}</td>
                            <td>${person.quotes}</td>
                        </tr>`;
                    }
                    resultsHTML += '</table>';

                    // Append the gender calculation to the table
                    resultsHTML += '<h3>Breakdown of gender</h3>';
                    resultsHTML += `<table class="gender-table">
                            <tr>
                                <th>Gender</th>
                                <th>Count</th>
                                <th>Percentage</th>
                            </tr>
                            <tr>
                                <td>Male</td>
                                <td>${maleCount}</td>
                                <td>${malePercentage}%</td>
                            </tr>
                            <tr>
                                <td>Female</td>
                                <td>${femaleCount}</td>
                                <td>${femalePercentage}%</td>
                            </tr>
                            <tr>
                                <td>Unknown</td>
                                <td>${unknownCount}</td>
                                <td>${unknownPercentage}%</td>
                            </tr>
                        </table>`;
                    
                        // Insert the HTML into the results div
                        const resultsDiv = document.getElementById('results_data');
                        resultsDiv.innerHTML = resultsHTML;
                    }

            // Hide the loading spinner and show the analyse button again
            analyseButton.style.display = 'block';
            loadingSpinner.style.display = 'none';
        
        })
        .catch(error => {
                console.error('Error:', error);
                
                // Hide the loading spinner and show the analyse button in case of an error
                loadingSpinner.style.display = 'none';
                analyseButton.style.display = 'block';
            });
        };

    // Add the event listener to the "Analyse" button
    document.getElementById('analyse-button').addEventListener('click', function() {
        analyseArticle();
    });

    </script>
</body>
</html>
